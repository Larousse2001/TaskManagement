{"version":3,"sources":["webpack:///../webpack/bootstrap","webpack:///../external \"@microsoft/sp-property-pane\"","webpack:///.././lib/webparts/helloWorld/assets/welcome-dark.png","webpack:///.././src/webparts/helloWorld/components/HelloWorld.tsx","webpack:///.././src/webparts/helloWorld/HelloWorldWebPart.ts","webpack:///../external \"@microsoft/sp-lodash-subset\"","webpack:///../external \"@microsoft/sp-core-library\"","webpack:///.././node_modules/@microsoft/spfx-heft-plugins/node_modules/css-loader/dist/runtime/api.js","webpack:///../external \"@microsoft/sp-webpart-base\"","webpack:///../external \"react\"","webpack:///../external \"react-dom\"","webpack:///../external \"HelloWorldWebPartStrings\"","webpack:///.././lib/webparts/helloWorld/components/HelloWorld.module.css","webpack:///.././src/webparts/helloWorld/components/HelloWorld.module.scss.ts","webpack:///.././lib/webparts/helloWorld/components/HelloWorld.module.css?b398","webpack:///../(webpack)/buildin/global.js","webpack:///.././node_modules/@microsoft/load-themed-styles/lib/index.js","webpack:///.././lib/webparts/helloWorld/assets/welcome-light.png"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA,8CAA8C,WAAW,+BAA+B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAY;AAC5B,gBAAgB,IAAK;AACrB,gEAAgE,UAAU,sBAAsB,aAAa;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AClSA,iBAAiB,qBAAuB,wD","file":"hello-world-web-part.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Set the webpack public path\r\n \t(function () {\r\n \t  var scripts = document.getElementsByTagName('script');\n \t  var regex = /hello-world-web-part\\.js/i;\n \t  var publicPath;\n\n \t  if (scripts && scripts.length) {\n \t    for (var i = 0; i < scripts.length; i++) {\n \t      if (!scripts[i]) continue;\n \t      var path = scripts[i].getAttribute('src');\n \t      if (path && path.match(regex)) {\n \t        publicPath = path.substring(0, path.lastIndexOf('/') + 1);\n \t        break;\n \t      }\n \t    }\n \t  }\n\n \t  if (!publicPath) {\n \t    for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {\n \t      if (global && global.match(regex)) {\n \t        publicPath = global.substring(0, global.lastIndexOf('/') + 1);\n \t        break;\n \t      }\n \t    }\n \t  }\n \t  __webpack_require__.p = publicPath;\r\n \t})();\r\n \t\r\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"GFLV\");\n","module.exports = __WEBPACK_EXTERNAL_MODULE__26ea__;","module.exports = __webpack_public_path__ + \"welcome-dark_dcd6e9e4aa4b30169bf8ab6002b643a7.png\";","import * as React from 'react';\nimport styles from './HelloWorld.module.scss';\nimport { IHelloWorldProps } from './IHelloWorldProps';\nimport { escape } from '@microsoft/sp-lodash-subset';\n\nexport default class HelloWorld extends React.Component<IHelloWorldProps, {}> {\n  public render(): React.ReactElement<IHelloWorldProps> {\n    const {\n      isDarkTheme,\n      hasTeamsContext,\n      userDisplayName\n    } = this.props;\n\n    return (\n      <section className={`${styles.helloWorld} ${hasTeamsContext ? styles.teams : ''}`}>\n        <div className={styles.welcome}>\n          <img alt=\"\" src={isDarkTheme ? require('../assets/welcome-dark.png') : require('../assets/welcome-light.png')} className={styles.welcomeImage} />\n          <h2>Well done, {escape(userDisplayName)}!</h2>\n        </div>\n        <div>\n          <h3>Welcome to Task Management!</h3>\n          <p>\n            A web-based task management application that allows users to create, edit, and track tasks, as well as prioritize and categorize them by status.\n            The application should feature intuitive drag and drop functionality, and a streamlined user interface that enables users to view tasks in multiple ways,\n            including a calendar view, a Gantt chart, and a list view. The application should integrate with existing project management tools and be accessible via\n            SharePoint & Teams.\n          </p>\n          <h4>Application features:</h4>\n          <ul className={styles.links}>\n            <li><b>Dashboard/Homepage:</b> The dashboard or homepage is the first screen users see after logging in. It could display a summary of their tasks, upcoming deadlines, and other relevant information. This interface could also have links to different views of their tasks.</li>\n            <li><b>Task Creation:</b> The task creation interface would allow users to create new tasks by entering a title, description, due date, priority, and status. Users could also assign the task to themselves or another user.</li>\n            <li><b>Task List View:</b> The task list view displays a list of all tasks, sorted by due date or priority. Users could filter or sort the tasks based on their preferences, and they could also perform bulk actions like editing or deleting multiple tasks.</li>\n            <li><b>Task Detail View:</b> The task detail view shows all the details of a specific task, including its title, description, due date, priority, and status. Users could edit or delete the task from this interface.</li>\n            <li><b>Calendar View:</b> The calendar view displays all tasks in a monthly or weekly calendar format. Users could easily view tasks that are due on a specific day or week, and they could also drag and drop tasks to different dates.</li>\n            <li><b>Gantt Chart View:</b> The Gantt chart view shows a visual representation of all tasks and their timelines. This interface allows users to easily see how tasks are progressing and identify potential scheduling conflicts.</li>\n            <li><b>User Management:</b> The user management interface allows administrators to add, remove, or edit user accounts. It could also enable administrators to assign different roles and permissions to users.</li>\n          </ul>\n        </div>\n        {/* <div id=\"spListContainer\" /> */}\n      </section>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport { Version } from '@microsoft/sp-core-library';\nimport {\n  IPropertyPaneConfiguration,\n  PropertyPaneTextField\n} from '@microsoft/sp-property-pane';\nimport { BaseClientSideWebPart } from '@microsoft/sp-webpart-base';\nimport { IReadonlyTheme } from '@microsoft/sp-component-base';\n\nimport * as strings from 'HelloWorldWebPartStrings';\nimport HelloWorld from './components/HelloWorld';\nimport { IHelloWorldProps } from './components/IHelloWorldProps';\n\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\n\nimport styles from '../helloWorld/components/HelloWorld.module.scss';\n\nexport interface IHelloWorldWebPartProps {\n  description: string;\n}\n\nexport interface ISPLists {\n  value: ISPList[];\n}\n\nexport interface ISPList {\n  Title: string;\n  Id: string;\n}\n\nexport default class HelloWorldWebPart extends BaseClientSideWebPart<IHelloWorldWebPartProps> {\n\n  private _isDarkTheme: boolean = false;\n  private _environmentMessage: string = '';\n\n  public render(): void {\n    const element: React.ReactElement<IHelloWorldProps> = React.createElement(\n      HelloWorld,\n      {\n        description: this.properties.description,\n        isDarkTheme: this._isDarkTheme,\n        environmentMessage: this._environmentMessage,\n        hasTeamsContext: !!this.context.sdks.microsoftTeams,\n        userDisplayName: this.context.pageContext.user.displayName\n      }\n    );\n\n    ReactDom.render(element, this.domElement);\n  }\n\n  protected onInit(): Promise<void> {\n    return this._getEnvironmentMessage().then(message => {\n      this._environmentMessage = message;\n    });\n  }\n\n  // private _getListData(): Promise<ISPLists> {\n  //   return this.context.spHttpClient.get(this.context.pageContext.web.absoluteUrl + '/_api/web/lists?$filter=Hidden eq false', SPHttpClient.configurations.v1)\n  //     .then((response: SPHttpClientResponse) => {\n  //       return response.json();\n  //     });\n  // }\n\n  // private _renderList(items: ISPList[]): void {\n  //   let html: string = '';\n  //   items.forEach((item: ISPList) => {\n  //     html += `\n  //   <ul class=\"${styles.list}\">\n  //     <li class=\"${styles.listItem}\">\n  //       <span class=\"ms-font-l\">${item.Title}</span>\n  //     </li>\n  //   </ul>`;\n  //   });\n  \n  //   const listContainer: Element = this.domElement.querySelector('#spListContainer');\n  //   listContainer.innerHTML = html;\n  // }\n\n  // private _renderListAsync(): void {\n  //   this._getListData()\n  //     .then((response) => {\n  //       this._renderList(response.value);\n  //     })\n  //     .catch(() => {console.log(\"error\")});\n  // }\n\n  private _getEnvironmentMessage(): Promise<string> {\n    if (!!this.context.sdks.microsoftTeams) { // running in Teams, office.com or Outlook\n      return this.context.sdks.microsoftTeams.teamsJs.app.getContext()\n        .then(context => {\n          let environmentMessage: string = '';\n          switch (context.app.host.name) {\n            case 'Office': // running in Office\n              environmentMessage = this.context.isServedFromLocalhost ? strings.AppLocalEnvironmentOffice : strings.AppOfficeEnvironment;\n              break;\n            case 'Outlook': // running in Outlook\n              environmentMessage = this.context.isServedFromLocalhost ? strings.AppLocalEnvironmentOutlook : strings.AppOutlookEnvironment;\n              break;\n            case 'Teams': // running in Teams\n              environmentMessage = this.context.isServedFromLocalhost ? strings.AppLocalEnvironmentTeams : strings.AppTeamsTabEnvironment;\n              break;\n            default:\n              throw new Error('Unknown host');\n          }\n\n          return environmentMessage;\n        });\n    }\n\n    return Promise.resolve(this.context.isServedFromLocalhost ? strings.AppLocalEnvironmentSharePoint : strings.AppSharePointEnvironment);\n  }\n\n  protected onThemeChanged(currentTheme: IReadonlyTheme | undefined): void {\n    if (!currentTheme) {\n      return;\n    }\n\n    this._isDarkTheme = !!currentTheme.isInverted;\n    const {\n      semanticColors\n    } = currentTheme;\n\n    if (semanticColors) {\n      this.domElement.style.setProperty('--bodyText', semanticColors.bodyText || null);\n      this.domElement.style.setProperty('--link', semanticColors.link || null);\n      this.domElement.style.setProperty('--linkHovered', semanticColors.linkHovered || null);\n    }\n\n  }\n\n  protected onDispose(): void {\n    ReactDom.unmountComponentAtNode(this.domElement);\n  }\n\n  protected get dataVersion(): Version {\n    return Version.parse('1.0');\n  }\n\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\n    return {\n      pages: [\n        {\n          header: {\n            description: strings.PropertyPaneDescription\n          },\n          groups: [\n            {\n              groupName: strings.BasicGroupName,\n              groupFields: [\n                PropertyPaneTextField('description', {\n                  label: strings.DescriptionFieldLabel\n                })\n              ]\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_Pk8u__;","module.exports = __WEBPACK_EXTERNAL_MODULE_UWqr__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_br4S__;","module.exports = __WEBPACK_EXTERNAL_MODULE_cDcd__;","module.exports = __WEBPACK_EXTERNAL_MODULE_faye__;","module.exports = __WEBPACK_EXTERNAL_MODULE_hI9z__;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/@microsoft/spfx-heft-plugins/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".helloWorld_ebc874c3{color:\\\"[theme:bodyText, default: #323130]\\\";color:var(--bodyText);overflow:hidden;padding:1em}.helloWorld_ebc874c3.teams_ebc874c3{font-family:Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif}.welcome_ebc874c3{text-align:center}.welcomeImage_ebc874c3{max-width:420px;width:100%}.links_ebc874c3 a{color:\\\"[theme:link, default:#03787c]\\\";color:var(--link);text-decoration:none}.links_ebc874c3 a:hover{color:\\\"[theme:linkHovered, default: #014446]\\\";color:var(--linkHovered);text-decoration:underline}.list_ebc874c3{box-shadow:0 4px 4px 0 rgba(0,0,0,.2),0 25px 50px 0 rgba(0,0,0,.1);line-height:50px;list-style-type:none;margin:10;padding:10}.listItem_ebc874c3,.list_ebc874c3{box-sizing:border-box;color:#333;font-family:Segoe UI Regular WestEuropean,Segoe UI,Tahoma,Arial,sans-serif;font-size:14px;font-weight:400}.listItem_ebc874c3{box-shadow:none;margin:0;padding:0;padding:9px 28px 3px;position:relative;vertical-align:center}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* tslint:disable */\r\nrequire(\"./HelloWorld.module.css\");\r\nconst styles = {\r\n  helloWorld: 'helloWorld_ebc874c3',\r\n  teams: 'teams_ebc874c3',\r\n  welcome: 'welcome_ebc874c3',\r\n  welcomeImage: 'welcomeImage_ebc874c3',\r\n  links: 'links_ebc874c3',\r\n  list: 'list_ebc874c3',\r\n  listItem: 'listItem_ebc874c3'\r\n};\r\n\r\nexport default styles;\r\n/* tslint:enable */","var content = require(\"!!../../../../node_modules/@microsoft/spfx-heft-plugins/node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ref--6-2!./HelloWorld.module.css\");\nvar loader = require(\"C:\\\\Users\\\\achra\\\\Downloads\\\\Task Management\\\\TaskManagement\\\\node_modules\\\\@microsoft\\\\load-themed-styles\\\\lib\\\\index.js\");\n\nif(typeof content === \"string\") content = [[module.id, content]];\n\n// add the styles to the DOM\nfor (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);\n\nif(content.locals) module.exports = content.locals;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitStyles = exports.detokenize = exports.clearStyles = exports.loadTheme = exports.flush = exports.configureRunMode = exports.configureLoadStyles = exports.loadStyles = void 0;\n// Store the theming state in __themeState__ global scope for reuse in the case of duplicate\n// load-themed-styles hosted on the page.\nconst _root = typeof window === 'undefined' ? global : window; // eslint-disable-line @typescript-eslint/no-explicit-any\n// Nonce string to inject into script tag if one provided. This is used in CSP (Content Security Policy).\nconst _styleNonce = _root && _root.CSPSettings && _root.CSPSettings.nonce;\nconst _themeState = initializeThemeState();\n/**\n * Matches theming tokens. For example, \"[theme: themeSlotName, default: #FFF]\" (including the quotes).\n */\nconst _themeTokenRegex = /[\\'\\\"]\\[theme:\\s*(\\w+)\\s*(?:\\,\\s*default:\\s*([\\\\\"\\']?[\\.\\,\\(\\)\\#\\-\\s\\w]*[\\.\\,\\(\\)\\#\\-\\w][\\\"\\']?))?\\s*\\][\\'\\\"]/g;\nconst now = () => typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now();\nfunction measure(func) {\n    const start = now();\n    func();\n    const end = now();\n    _themeState.perf.duration += end - start;\n}\n/**\n * initialize global state object\n */\nfunction initializeThemeState() {\n    let state = _root.__themeState__ || {\n        theme: undefined,\n        lastStyleElement: undefined,\n        registeredStyles: []\n    };\n    if (!state.runState) {\n        state = Object.assign(Object.assign({}, state), { perf: {\n                count: 0,\n                duration: 0\n            }, runState: {\n                flushTimer: 0,\n                mode: 0 /* Mode.sync */,\n                buffer: []\n            } });\n    }\n    if (!state.registeredThemableStyles) {\n        state = Object.assign(Object.assign({}, state), { registeredThemableStyles: [] });\n    }\n    _root.__themeState__ = state;\n    return state;\n}\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load\n * event is fired.\n * @param {string | ThemableArray} styles Themable style text to register.\n * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.\n */\nfunction loadStyles(styles, loadAsync = false) {\n    measure(() => {\n        const styleParts = Array.isArray(styles) ? styles : splitStyles(styles);\n        const { mode, buffer, flushTimer } = _themeState.runState;\n        if (loadAsync || mode === 1 /* Mode.async */) {\n            buffer.push(styleParts);\n            if (!flushTimer) {\n                _themeState.runState.flushTimer = asyncLoadStyles();\n            }\n        }\n        else {\n            applyThemableStyles(styleParts);\n        }\n    });\n}\nexports.loadStyles = loadStyles;\n/**\n * Allows for customizable loadStyles logic. e.g. for server side rendering application\n * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}\n * a loadStyles callback that gets called when styles are loaded or reloaded\n */\nfunction configureLoadStyles(loadStylesFn) {\n    _themeState.loadStyles = loadStylesFn;\n}\nexports.configureLoadStyles = configureLoadStyles;\n/**\n * Configure run mode of load-themable-styles\n * @param mode load-themable-styles run mode, async or sync\n */\nfunction configureRunMode(mode) {\n    _themeState.runState.mode = mode;\n}\nexports.configureRunMode = configureRunMode;\n/**\n * external code can call flush to synchronously force processing of currently buffered styles\n */\nfunction flush() {\n    measure(() => {\n        const styleArrays = _themeState.runState.buffer.slice();\n        _themeState.runState.buffer = [];\n        const mergedStyleArray = [].concat.apply([], styleArrays);\n        if (mergedStyleArray.length > 0) {\n            applyThemableStyles(mergedStyleArray);\n        }\n    });\n}\nexports.flush = flush;\n/**\n * register async loadStyles\n */\nfunction asyncLoadStyles() {\n    return setTimeout(() => {\n        _themeState.runState.flushTimer = 0;\n        flush();\n    }, 0);\n}\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load event\n * is fired.\n * @param {string} styleText Style to register.\n * @param {IStyleRecord} styleRecord Existing style record to re-apply.\n */\nfunction applyThemableStyles(stylesArray, styleRecord) {\n    if (_themeState.loadStyles) {\n        _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);\n    }\n    else {\n        registerStyles(stylesArray);\n    }\n}\n/**\n * Registers a set theme tokens to find and replace. If styles were already registered, they will be\n * replaced.\n * @param {theme} theme JSON object of theme tokens to values.\n */\nfunction loadTheme(theme) {\n    _themeState.theme = theme;\n    // reload styles.\n    reloadStyles();\n}\nexports.loadTheme = loadTheme;\n/**\n * Clear already registered style elements and style records in theme_State object\n * @param option - specify which group of registered styles should be cleared.\n * Default to be both themable and non-themable styles will be cleared\n */\nfunction clearStyles(option = 3 /* ClearStyleOptions.all */) {\n    if (option === 3 /* ClearStyleOptions.all */ || option === 2 /* ClearStyleOptions.onlyNonThemable */) {\n        clearStylesInternal(_themeState.registeredStyles);\n        _themeState.registeredStyles = [];\n    }\n    if (option === 3 /* ClearStyleOptions.all */ || option === 1 /* ClearStyleOptions.onlyThemable */) {\n        clearStylesInternal(_themeState.registeredThemableStyles);\n        _themeState.registeredThemableStyles = [];\n    }\n}\nexports.clearStyles = clearStyles;\nfunction clearStylesInternal(records) {\n    records.forEach((styleRecord) => {\n        const styleElement = styleRecord && styleRecord.styleElement;\n        if (styleElement && styleElement.parentElement) {\n            styleElement.parentElement.removeChild(styleElement);\n        }\n    });\n}\n/**\n * Reloads styles.\n */\nfunction reloadStyles() {\n    if (_themeState.theme) {\n        const themableStyles = [];\n        for (const styleRecord of _themeState.registeredThemableStyles) {\n            themableStyles.push(styleRecord.themableStyle);\n        }\n        if (themableStyles.length > 0) {\n            clearStyles(1 /* ClearStyleOptions.onlyThemable */);\n            applyThemableStyles([].concat.apply([], themableStyles));\n        }\n    }\n}\n/**\n * Find theme tokens and replaces them with provided theme values.\n * @param {string} styles Tokenized styles to fix.\n */\nfunction detokenize(styles) {\n    if (styles) {\n        styles = resolveThemableArray(splitStyles(styles)).styleString;\n    }\n    return styles;\n}\nexports.detokenize = detokenize;\n/**\n * Resolves ThemingInstruction objects in an array and joins the result into a string.\n * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.\n */\nfunction resolveThemableArray(splitStyleArray) {\n    const { theme } = _themeState;\n    let themable = false;\n    // Resolve the array of theming instructions to an array of strings.\n    // Then join the array to produce the final CSS string.\n    const resolvedArray = (splitStyleArray || []).map((currentValue) => {\n        const themeSlot = currentValue.theme;\n        if (themeSlot) {\n            themable = true;\n            // A theming annotation. Resolve it.\n            const themedValue = theme ? theme[themeSlot] : undefined;\n            const defaultValue = currentValue.defaultValue || 'inherit';\n            // Warn to console if we hit an unthemed value even when themes are provided, but only if \"DEBUG\" is true.\n            // Allow the themedValue to be undefined to explicitly request the default value.\n            if (theme &&\n                !themedValue &&\n                console &&\n                !(themeSlot in theme) &&\n                typeof DEBUG !== 'undefined' &&\n                DEBUG) {\n                console.warn(`Theming value not provided for \"${themeSlot}\". Falling back to \"${defaultValue}\".`);\n            }\n            return themedValue || defaultValue;\n        }\n        else {\n            // A non-themable string. Preserve it.\n            return currentValue.rawString;\n        }\n    });\n    return {\n        styleString: resolvedArray.join(''),\n        themable: themable\n    };\n}\n/**\n * Split tokenized CSS into an array of strings and theme specification objects\n * @param {string} styles Tokenized styles to split.\n */\nfunction splitStyles(styles) {\n    const result = [];\n    if (styles) {\n        let pos = 0; // Current position in styles.\n        let tokenMatch;\n        while ((tokenMatch = _themeTokenRegex.exec(styles))) {\n            const matchIndex = tokenMatch.index;\n            if (matchIndex > pos) {\n                result.push({\n                    rawString: styles.substring(pos, matchIndex)\n                });\n            }\n            result.push({\n                theme: tokenMatch[1],\n                defaultValue: tokenMatch[2] // May be undefined\n            });\n            // index of the first character after the current match\n            pos = _themeTokenRegex.lastIndex;\n        }\n        // Push the rest of the string after the last match.\n        result.push({\n            rawString: styles.substring(pos)\n        });\n    }\n    return result;\n}\nexports.splitStyles = splitStyles;\n/**\n * Registers a set of style text. If it is registered too early, we will register it when the\n * window.load event is fired.\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\n */\nfunction registerStyles(styleArray) {\n    if (typeof document === 'undefined') {\n        return;\n    }\n    const head = document.getElementsByTagName('head')[0];\n    const styleElement = document.createElement('style');\n    const { styleString, themable } = resolveThemableArray(styleArray);\n    styleElement.setAttribute('data-load-themed-styles', 'true');\n    if (_styleNonce) {\n        styleElement.setAttribute('nonce', _styleNonce);\n    }\n    styleElement.appendChild(document.createTextNode(styleString));\n    _themeState.perf.count++;\n    head.appendChild(styleElement);\n    const ev = document.createEvent('HTMLEvents');\n    ev.initEvent('styleinsert', true /* bubbleEvent */, false /* cancelable */);\n    ev.args = {\n        newStyle: styleElement\n    };\n    document.dispatchEvent(ev);\n    const record = {\n        styleElement: styleElement,\n        themableStyle: styleArray\n    };\n    if (themable) {\n        _themeState.registeredThemableStyles.push(record);\n    }\n    else {\n        _themeState.registeredStyles.push(record);\n    }\n}\n//# sourceMappingURL=index.js.map","module.exports = __webpack_public_path__ + \"welcome-light_1eaf582a9b78272e22113e1e733138b8.png\";"],"sourceRoot":""}